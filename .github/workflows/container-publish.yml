name: Container Build and Release

on:
  workflow_call:
    inputs:
      version:
        description: "Semantic version of the image"
        required: true
        type: string

      container-file:
        description: "Path to the Dockerfile"
        type: string
        default: "Dockerfile"

      container-name:
        description: "Name of the container"
        type: string
        default: "${{ github.repository }}"

      sbom:
        description: "Generate and upload SBOM"
        type: string
        default: "true"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.container-name }}

jobs:
  publish-image:
    runs-on: ubuntu-latest

    permissions:
      # to upload SBOM
      id-token: write
      contents: write
      packages: write          # to upload Docker image
      attestations: write      # Upload attestations

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Container Metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # latest / main
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # SemVer
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ inputs.version }}
    
      - name: Build & Publish Container ${{ env.IMAGE_NAME }}
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        id: build
        with:
          file: "${{ inputs.container-file }}"
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # SBOM Settings
          sbom: true

      # Upload Software Bill of Materials (SBOM) to GitHub
      - name: Upload SBOM
        uses: advanced-security/spdx-dependency-submission-action@5530bab9ee4bbe66420ce8280624036c77f89746  # v0.1.1
        with:
          filePath: '.'
          filePattern: '*.spdx.json'

      # Build provenance attestations
      - name: Attest Container Image
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2  # v2.2.3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      # - name: Attest Container SBOM
      #   uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2  # v2.2.3
      #   with:
      #     subject-path:: '*.spdx.json'
