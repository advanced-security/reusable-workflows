# GitHub Releasing Workflow
name: GitHub - Release

on:
  workflow_dispatch:
    inputs:
      bump:
        type: choice
        description: "The type of version bump to perform"
        options: 
          - patch
          - minor
          - major
  workflow_call:
    inputs:
      version:
        description: "The version to release"
        required: true
        type: string

jobs:
  release-next:
    runs-on: ubuntu-latest
    # If the workflow was triggered by workflow_dispatch
    if: ${{ github.event_name == 'workflow_dispatch' }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Patch Release Me"
        uses: 42ByteLabs/patch-release-me@f950db6bce09f2156a5f2d1cc86ac60ed1663a9e    # 0.5.3
        with:
          mode: ${{ github.event.inputs.bump }}

      - name: "Create Release"
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ github.token }}
          commit-message: "[chore]: Create release for ${{ github.event.inputs.version }}"
          title: "[chore]: Create release for ${{ github.event.inputs.version }}"
          branch: chore-release-${{ github.event.inputs.version }}
          base: ${{ github.event.before }}
          labels: version
          body: |
            This is an automated PR to create a new release. The release will be created once this PR is merged.

  release:
    runs-on: ubuntu-latest
    # If the workflow was triggered by a workflow call and the version is not null
    if: ${{ github.event_name == 'workflow_call' && github.event.inputs.version != null }}

    permissions:
      contents: write

    steps:
      # https://github.com/peter-murray/semver-data-action
      - name: Parse SemVer
        id: version
        uses: peter-murray/semver-action@5a07021b987a48fb9129231397615329ad74703c # v1.0.1
        with:
          version: ${{ inputs.version }}

      # Tags :: ${Full}, v${Major}, v${Major}.${Minor}, v${Major}.${Minor}.${Patch}
      - name: "GitHub Release"
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git tag "${{ steps.version.outputs.version }}" --force
          git tag "v${{ steps.version.outputs.major }}" --force
          git tag "v${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}" --force
          git tag "v${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}" --force

          git push origin ${{ github.ref_name }}
          git push origin --tags --force

          gh release create --latest --generate-notes \
            --title "v${{ steps.version.outputs.version }}" \
            "${{ steps.version.outputs.version }}"
      
